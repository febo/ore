/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';

export type Mine = { digest: Array<number>; nonce: Array<number> };

export type MineArgs = Mine;

export function getMineEncoder(): Encoder<MineArgs> {
  return getStructEncoder([
    ['digest', getArrayEncoder(getU8Encoder(), { size: 16 })],
    ['nonce', getArrayEncoder(getU8Encoder(), { size: 8 })],
  ]);
}

export function getMineDecoder(): Decoder<Mine> {
  return getStructDecoder([
    ['digest', getArrayDecoder(getU8Decoder(), { size: 16 })],
    ['nonce', getArrayDecoder(getU8Decoder(), { size: 8 })],
  ]);
}

export function getMineCodec(): Codec<MineArgs, Mine> {
  return combineCodec(getMineEncoder(), getMineDecoder());
}
